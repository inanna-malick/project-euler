/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
 */
package complete

import Math.{ sqrt, floor }
import scala.annotation.tailrec

object Problem12 {

  def main(args: Array[String]): Unit = {
    
    @tailrec
    def go(i: Int): Int = {
      val ith_tri = (1 to i).foldLeft(0)(_ + _)
      factor_count(ith_tri) match {
        case x if x > 500 => ith_tri
        case x => go(i + 1)
      }

    }
    
    println(go(5))
  }

  def factor_count(n: Int): Int = (1 to floor(sqrt(n)).toInt).filter(x => n % x == 0).flatMap(x => List(n / x, x)).toList.length

}



